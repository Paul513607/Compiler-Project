Grammar

    0 $accept: program $end

    1 program: lines

    2 lines: line
    3      | lines line

    4 line: assignment ';'
    5     | exit_command ';'
    6     | print exp ';'
    7     | print String_Value ',' exp ';'
    8     | stat
    9     | FUNCTION
   10     | EVAL '(' exp ')' ';'
   11     | DEFINE_TYPE '{' ELEMENTS '}' IDENTIFIER ';'

   12 ELEMENTS: DATA_TYPE IDENTIFIER ';' ELEMENTS
   13         | %empty

   14 DATA_TYPE: Integer
   15          | Float
   16          | Character
   17          | Bool
   18          | String

   19 assignment: DATA_TYPE IDENTIFIER
   20           | DATA_TYPE IDENTIFIER EQUAL exp
   21           | Const DATA_TYPE IDENTIFIER EQUAL exp
   22           | DATA_TYPE IDENTIFIER '[' exp ']'
   23           | IDENTIFIER EQUAL exp
   24           | IDENTIFIER '[' exp ']' EQUAL exp

   25 exp: term
   26    | '(' exp ')'
   27    | exp PLUS exp
   28    | exp MINUS exp
   29    | exp PROD exp
   30    | exp DIV exp
   31    | exp AND exp
   32    | exp OR exp
   33    | exp LS exp
   34    | exp GE exp
   35    | exp LEQ exp
   36    | exp GEQ exp
   37    | exp EQEQ exp

   38 term: IDENTIFIER
   39     | IDENTIFIER '[' exp ']'
   40     | IDENTIFIER '(' fun_call_list ')'
   41     | number
   42     | number_r
   43     | Character_Value
   44     | String_Value

   45 fun_call_list: more_call_param
   46              | %empty

   47 more_call_param: exp
   48                | more_call_param ',' exp

   49 stat: IF '(' exp ')' smtm
   50     | IF '(' exp ')' smtm ELIF_S ELSE_
   51     | IF '(' exp ')' smtm ELSE_
   52     | IF '(' exp ')' smtm ELIF_S
   53     | WHILE '(' exp ')' smtm
   54     | FOR '(' IDENTIFIER EQUAL exp ';' exp ';' IDENTIFIER EQUAL exp ')' smtm

   55 ELSE_: ELSE smtm

   56 ELIF_S: ELIF_
   57       | ELIF_S ELIF_

   58 ELIF_: ELIF '(' exp ')' smtm

   59 smtm: '{' smtm_types '}'
   60     | '{' '}'

   61 smtm_types: smtm_type
   62           | smtm_types smtm_type

   63 smtm_type: assignment ';'
   64          | exp ';'
   65          | print exp ';'
   66          | stat

   67 FUNCTION: DATA_TYPE FUN IDENTIFIER '(' lista_param ')' smtm_fun

   68 lista_param: more_params
   69            | %empty

   70 more_params: paramentru
   71            | more_params ',' paramentru

   72 paramentru: DATA_TYPE IDENTIFIER

   73 smtm_fun: '{' smtm_types RETURN exp ';' '}'
   74         | '{' RETURN exp ';' '}'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 10 26 40 49 50 51 52 53 54 58 67
    ')' (41) 10 26 40 49 50 51 52 53 54 58 67
    ',' (44) 7 48 71
    ';' (59) 4 5 6 7 10 11 12 54 63 64 65 73 74
    '[' (91) 22 24 39
    ']' (93) 22 24 39
    '{' (123) 11 59 60 73 74
    '}' (125) 11 59 60 73 74
    error (256)
    print (258) 6 7 65
    Integer <type_id> (259) 14
    Float <type_id> (260) 15
    Character <type_id> (261) 16
    Bool <type_id> (262) 17
    String <type_id> (263) 18
    Const (264) 21
    GEQ (265) 36
    LEQ (266) 35
    AND (267) 31
    OR (268) 32
    EQEQ (269) 37
    LS (270) 33
    GE (271) 34
    PLUS (272) 27
    MINUS (273) 28
    PROD (274) 29
    DIV (275) 30
    EQUAL (276) 20 21 23 24 54
    IF (277) 49 50 51 52
    WHILE (278) 53
    FOR (279) 54
    ELSE (280) 55
    ELIF (281) 58
    FUN (282) 67
    RETURN (283) 73 74
    DEFINE_TYPE (284) 11
    String_Value <string> (285) 7 44
    Character_Value <string> (286) 43
    EVAL (287) 10
    exit_command (288) 5
    number <num> (289) 41
    number_r <num> (290) 42
    IDENTIFIER <string> (291) 11 12 19 20 21 22 23 24 38 39 40 54 67 72


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    program (46)
        on left: 1
        on right: 0
    lines <num> (47)
        on left: 2 3
        on right: 1 3
    line <num> (48)
        on left: 4 5 6 7 8 9 10 11
        on right: 2 3
    ELEMENTS (49)
        on left: 12 13
        on right: 11 12
    DATA_TYPE <type_id> (50)
        on left: 14 15 16 17 18
        on right: 12 19 20 21 22 67 72
    assignment <num> (51)
        on left: 19 20 21 22 23 24
        on right: 4 63
    exp <strct> (52)
        on left: 25 26 27 28 29 30 31 32 33 34 35 36 37
        on right: 6 7 10 20 21 22 23 24 26 27 28 29 30 31 32 33 34 35 36 37 39 47 48 49 50 51 52 53 54 58 64 65 73 74
    term <strct> (53)
        on left: 38 39 40 41 42 43 44
        on right: 25
    fun_call_list <funParam> (54)
        on left: 45 46
        on right: 40
    more_call_param <funParam> (55)
        on left: 47 48
        on right: 45 48
    stat <num> (56)
        on left: 49 50 51 52 53 54
        on right: 8 66
    ELSE_ <num> (57)
        on left: 55
        on right: 50 51
    ELIF_S <num> (58)
        on left: 56 57
        on right: 50 52 57
    ELIF_ <num> (59)
        on left: 58
        on right: 56 57
    smtm <num> (60)
        on left: 59 60
        on right: 49 50 51 52 53 54 55 58
    smtm_types <num> (61)
        on left: 61 62
        on right: 59 62 73
    smtm_type <num> (62)
        on left: 63 64 65 66
        on right: 61 62
    FUNCTION <num> (63)
        on left: 67
        on right: 9
    lista_param <funParam> (64)
        on left: 68 69
        on right: 67
    more_params <funParam> (65)
        on left: 70 71
        on right: 68 71
    paramentru <type_id> (66)
        on left: 72
        on right: 70 71
    smtm_fun <num> (67)
        on left: 73 74
        on right: 67


State 0

    0 $accept: . program $end

    print         shift, and go to state 1
    Integer       shift, and go to state 2
    Float         shift, and go to state 3
    Character     shift, and go to state 4
    Bool          shift, and go to state 5
    String        shift, and go to state 6
    Const         shift, and go to state 7
    IF            shift, and go to state 8
    WHILE         shift, and go to state 9
    FOR           shift, and go to state 10
    DEFINE_TYPE   shift, and go to state 11
    EVAL          shift, and go to state 12
    exit_command  shift, and go to state 13
    IDENTIFIER    shift, and go to state 14

    program     go to state 15
    lines       go to state 16
    line        go to state 17
    DATA_TYPE   go to state 18
    assignment  go to state 19
    stat        go to state 20
    FUNCTION    go to state 21


State 1

    6 line: print . exp ';'
    7     | print . String_Value ',' exp ';'

    String_Value     shift, and go to state 22
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 28
    term  go to state 29


State 2

   14 DATA_TYPE: Integer .

    $default  reduce using rule 14 (DATA_TYPE)


State 3

   15 DATA_TYPE: Float .

    $default  reduce using rule 15 (DATA_TYPE)


State 4

   16 DATA_TYPE: Character .

    $default  reduce using rule 16 (DATA_TYPE)


State 5

   17 DATA_TYPE: Bool .

    $default  reduce using rule 17 (DATA_TYPE)


State 6

   18 DATA_TYPE: String .

    $default  reduce using rule 18 (DATA_TYPE)


State 7

   21 assignment: Const . DATA_TYPE IDENTIFIER EQUAL exp

    Integer    shift, and go to state 2
    Float      shift, and go to state 3
    Character  shift, and go to state 4
    Bool       shift, and go to state 5
    String     shift, and go to state 6

    DATA_TYPE  go to state 30


State 8

   49 stat: IF . '(' exp ')' smtm
   50     | IF . '(' exp ')' smtm ELIF_S ELSE_
   51     | IF . '(' exp ')' smtm ELSE_
   52     | IF . '(' exp ')' smtm ELIF_S

    '('  shift, and go to state 31


State 9

   53 stat: WHILE . '(' exp ')' smtm

    '('  shift, and go to state 32


State 10

   54 stat: FOR . '(' IDENTIFIER EQUAL exp ';' exp ';' IDENTIFIER EQUAL exp ')' smtm

    '('  shift, and go to state 33


State 11

   11 line: DEFINE_TYPE . '{' ELEMENTS '}' IDENTIFIER ';'

    '{'  shift, and go to state 34


State 12

   10 line: EVAL . '(' exp ')' ';'

    '('  shift, and go to state 35


State 13

    5 line: exit_command . ';'

    ';'  shift, and go to state 36


State 14

   23 assignment: IDENTIFIER . EQUAL exp
   24           | IDENTIFIER . '[' exp ']' EQUAL exp

    EQUAL  shift, and go to state 37
    '['    shift, and go to state 38


State 15

    0 $accept: program . $end

    $end  shift, and go to state 39


State 16

    1 program: lines .
    3 lines: lines . line

    print         shift, and go to state 1
    Integer       shift, and go to state 2
    Float         shift, and go to state 3
    Character     shift, and go to state 4
    Bool          shift, and go to state 5
    String        shift, and go to state 6
    Const         shift, and go to state 7
    IF            shift, and go to state 8
    WHILE         shift, and go to state 9
    FOR           shift, and go to state 10
    DEFINE_TYPE   shift, and go to state 11
    EVAL          shift, and go to state 12
    exit_command  shift, and go to state 13
    IDENTIFIER    shift, and go to state 14

    $default  reduce using rule 1 (program)

    line        go to state 40
    DATA_TYPE   go to state 18
    assignment  go to state 19
    stat        go to state 20
    FUNCTION    go to state 21


State 17

    2 lines: line .

    $default  reduce using rule 2 (lines)


State 18

   19 assignment: DATA_TYPE . IDENTIFIER
   20           | DATA_TYPE . IDENTIFIER EQUAL exp
   22           | DATA_TYPE . IDENTIFIER '[' exp ']'
   67 FUNCTION: DATA_TYPE . FUN IDENTIFIER '(' lista_param ')' smtm_fun

    FUN         shift, and go to state 41
    IDENTIFIER  shift, and go to state 42


State 19

    4 line: assignment . ';'

    ';'  shift, and go to state 43


State 20

    8 line: stat .

    $default  reduce using rule 8 (line)


State 21

    9 line: FUNCTION .

    $default  reduce using rule 9 (line)


State 22

    7 line: print String_Value . ',' exp ';'
   44 term: String_Value .

    ','  shift, and go to state 44

    $default  reduce using rule 44 (term)


State 23

   43 term: Character_Value .

    $default  reduce using rule 43 (term)


State 24

   41 term: number .

    $default  reduce using rule 41 (term)


State 25

   42 term: number_r .

    $default  reduce using rule 42 (term)


State 26

   38 term: IDENTIFIER .
   39     | IDENTIFIER . '[' exp ']'
   40     | IDENTIFIER . '(' fun_call_list ')'

    '('  shift, and go to state 45
    '['  shift, and go to state 46

    $default  reduce using rule 38 (term)


State 27

   26 exp: '(' . exp ')'

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 48
    term  go to state 29


State 28

    6 line: print exp . ';'
   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp

    GEQ    shift, and go to state 49
    LEQ    shift, and go to state 50
    AND    shift, and go to state 51
    OR     shift, and go to state 52
    EQEQ   shift, and go to state 53
    LS     shift, and go to state 54
    GE     shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59
    ';'    shift, and go to state 60


State 29

   25 exp: term .

    $default  reduce using rule 25 (exp)


State 30

   21 assignment: Const DATA_TYPE . IDENTIFIER EQUAL exp

    IDENTIFIER  shift, and go to state 61


State 31

   49 stat: IF '(' . exp ')' smtm
   50     | IF '(' . exp ')' smtm ELIF_S ELSE_
   51     | IF '(' . exp ')' smtm ELSE_
   52     | IF '(' . exp ')' smtm ELIF_S

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 62
    term  go to state 29


State 32

   53 stat: WHILE '(' . exp ')' smtm

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 63
    term  go to state 29


State 33

   54 stat: FOR '(' . IDENTIFIER EQUAL exp ';' exp ';' IDENTIFIER EQUAL exp ')' smtm

    IDENTIFIER  shift, and go to state 64


State 34

   11 line: DEFINE_TYPE '{' . ELEMENTS '}' IDENTIFIER ';'

    Integer    shift, and go to state 2
    Float      shift, and go to state 3
    Character  shift, and go to state 4
    Bool       shift, and go to state 5
    String     shift, and go to state 6

    $default  reduce using rule 13 (ELEMENTS)

    ELEMENTS   go to state 65
    DATA_TYPE  go to state 66


State 35

   10 line: EVAL '(' . exp ')' ';'

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 67
    term  go to state 29


State 36

    5 line: exit_command ';' .

    $default  reduce using rule 5 (line)


State 37

   23 assignment: IDENTIFIER EQUAL . exp

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 68
    term  go to state 29


State 38

   24 assignment: IDENTIFIER '[' . exp ']' EQUAL exp

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 69
    term  go to state 29


State 39

    0 $accept: program $end .

    $default  accept


State 40

    3 lines: lines line .

    $default  reduce using rule 3 (lines)


State 41

   67 FUNCTION: DATA_TYPE FUN . IDENTIFIER '(' lista_param ')' smtm_fun

    IDENTIFIER  shift, and go to state 70


State 42

   19 assignment: DATA_TYPE IDENTIFIER .
   20           | DATA_TYPE IDENTIFIER . EQUAL exp
   22           | DATA_TYPE IDENTIFIER . '[' exp ']'

    EQUAL  shift, and go to state 71
    '['    shift, and go to state 72

    $default  reduce using rule 19 (assignment)


State 43

    4 line: assignment ';' .

    $default  reduce using rule 4 (line)


State 44

    7 line: print String_Value ',' . exp ';'

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 73
    term  go to state 29


State 45

   40 term: IDENTIFIER '(' . fun_call_list ')'

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    $default  reduce using rule 46 (fun_call_list)

    exp              go to state 74
    term             go to state 29
    fun_call_list    go to state 75
    more_call_param  go to state 76


State 46

   39 term: IDENTIFIER '[' . exp ']'

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 77
    term  go to state 29


State 47

   44 term: String_Value .

    $default  reduce using rule 44 (term)


State 48

   26 exp: '(' exp . ')'
   27    | exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp

    GEQ    shift, and go to state 49
    LEQ    shift, and go to state 50
    AND    shift, and go to state 51
    OR     shift, and go to state 52
    EQEQ   shift, and go to state 53
    LS     shift, and go to state 54
    GE     shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59
    ')'    shift, and go to state 78


State 49

   36 exp: exp GEQ . exp

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 79
    term  go to state 29


State 50

   35 exp: exp LEQ . exp

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 80
    term  go to state 29


State 51

   31 exp: exp AND . exp

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 81
    term  go to state 29


State 52

   32 exp: exp OR . exp

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 82
    term  go to state 29


State 53

   37 exp: exp EQEQ . exp

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 83
    term  go to state 29


State 54

   33 exp: exp LS . exp

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 84
    term  go to state 29


State 55

   34 exp: exp GE . exp

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 85
    term  go to state 29


State 56

   27 exp: exp PLUS . exp

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 86
    term  go to state 29


State 57

   28 exp: exp MINUS . exp

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 87
    term  go to state 29


State 58

   29 exp: exp PROD . exp

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 88
    term  go to state 29


State 59

   30 exp: exp DIV . exp

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 89
    term  go to state 29


State 60

    6 line: print exp ';' .

    $default  reduce using rule 6 (line)


State 61

   21 assignment: Const DATA_TYPE IDENTIFIER . EQUAL exp

    EQUAL  shift, and go to state 90


State 62

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp
   49 stat: IF '(' exp . ')' smtm
   50     | IF '(' exp . ')' smtm ELIF_S ELSE_
   51     | IF '(' exp . ')' smtm ELSE_
   52     | IF '(' exp . ')' smtm ELIF_S

    GEQ    shift, and go to state 49
    LEQ    shift, and go to state 50
    AND    shift, and go to state 51
    OR     shift, and go to state 52
    EQEQ   shift, and go to state 53
    LS     shift, and go to state 54
    GE     shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59
    ')'    shift, and go to state 91


State 63

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp
   53 stat: WHILE '(' exp . ')' smtm

    GEQ    shift, and go to state 49
    LEQ    shift, and go to state 50
    AND    shift, and go to state 51
    OR     shift, and go to state 52
    EQEQ   shift, and go to state 53
    LS     shift, and go to state 54
    GE     shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59
    ')'    shift, and go to state 92


State 64

   54 stat: FOR '(' IDENTIFIER . EQUAL exp ';' exp ';' IDENTIFIER EQUAL exp ')' smtm

    EQUAL  shift, and go to state 93


State 65

   11 line: DEFINE_TYPE '{' ELEMENTS . '}' IDENTIFIER ';'

    '}'  shift, and go to state 94


State 66

   12 ELEMENTS: DATA_TYPE . IDENTIFIER ';' ELEMENTS

    IDENTIFIER  shift, and go to state 95


State 67

   10 line: EVAL '(' exp . ')' ';'
   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp

    GEQ    shift, and go to state 49
    LEQ    shift, and go to state 50
    AND    shift, and go to state 51
    OR     shift, and go to state 52
    EQEQ   shift, and go to state 53
    LS     shift, and go to state 54
    GE     shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59
    ')'    shift, and go to state 96


State 68

   23 assignment: IDENTIFIER EQUAL exp .
   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp

    GEQ    shift, and go to state 49
    LEQ    shift, and go to state 50
    AND    shift, and go to state 51
    OR     shift, and go to state 52
    EQEQ   shift, and go to state 53
    LS     shift, and go to state 54
    GE     shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59

    $default  reduce using rule 23 (assignment)


State 69

   24 assignment: IDENTIFIER '[' exp . ']' EQUAL exp
   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp

    GEQ    shift, and go to state 49
    LEQ    shift, and go to state 50
    AND    shift, and go to state 51
    OR     shift, and go to state 52
    EQEQ   shift, and go to state 53
    LS     shift, and go to state 54
    GE     shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59
    ']'    shift, and go to state 97


State 70

   67 FUNCTION: DATA_TYPE FUN IDENTIFIER . '(' lista_param ')' smtm_fun

    '('  shift, and go to state 98


State 71

   20 assignment: DATA_TYPE IDENTIFIER EQUAL . exp

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 99
    term  go to state 29


State 72

   22 assignment: DATA_TYPE IDENTIFIER '[' . exp ']'

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 100
    term  go to state 29


State 73

    7 line: print String_Value ',' exp . ';'
   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp

    GEQ    shift, and go to state 49
    LEQ    shift, and go to state 50
    AND    shift, and go to state 51
    OR     shift, and go to state 52
    EQEQ   shift, and go to state 53
    LS     shift, and go to state 54
    GE     shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59
    ';'    shift, and go to state 101


State 74

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp
   47 more_call_param: exp .

    GEQ    shift, and go to state 49
    LEQ    shift, and go to state 50
    AND    shift, and go to state 51
    OR     shift, and go to state 52
    EQEQ   shift, and go to state 53
    LS     shift, and go to state 54
    GE     shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59

    $default  reduce using rule 47 (more_call_param)


State 75

   40 term: IDENTIFIER '(' fun_call_list . ')'

    ')'  shift, and go to state 102


State 76

   45 fun_call_list: more_call_param .
   48 more_call_param: more_call_param . ',' exp

    ','  shift, and go to state 103

    $default  reduce using rule 45 (fun_call_list)


State 77

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp
   39 term: IDENTIFIER '[' exp . ']'

    GEQ    shift, and go to state 49
    LEQ    shift, and go to state 50
    AND    shift, and go to state 51
    OR     shift, and go to state 52
    EQEQ   shift, and go to state 53
    LS     shift, and go to state 54
    GE     shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59
    ']'    shift, and go to state 104


State 78

   26 exp: '(' exp ')' .

    $default  reduce using rule 26 (exp)


State 79

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   36    | exp GEQ exp .
   37    | exp . EQEQ exp

    AND    shift, and go to state 51
    OR     shift, and go to state 52
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59

    $default  reduce using rule 36 (exp)


State 80

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   35    | exp LEQ exp .
   36    | exp . GEQ exp
   37    | exp . EQEQ exp

    AND    shift, and go to state 51
    OR     shift, and go to state 52
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59

    $default  reduce using rule 35 (exp)


State 81

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   31    | exp AND exp .
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp

    $default  reduce using rule 31 (exp)


State 82

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   32    | exp OR exp .
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp

    AND  shift, and go to state 51

    $default  reduce using rule 32 (exp)


State 83

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp
   37    | exp EQEQ exp .

    GEQ    shift, and go to state 49
    LEQ    shift, and go to state 50
    AND    shift, and go to state 51
    OR     shift, and go to state 52
    LS     shift, and go to state 54
    GE     shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59

    $default  reduce using rule 37 (exp)


State 84

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   33    | exp LS exp .
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp

    AND    shift, and go to state 51
    OR     shift, and go to state 52
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59

    $default  reduce using rule 33 (exp)


State 85

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   34    | exp GE exp .
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp

    AND    shift, and go to state 51
    OR     shift, and go to state 52
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59

    $default  reduce using rule 34 (exp)


State 86

   27 exp: exp . PLUS exp
   27    | exp PLUS exp .
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp

    AND   shift, and go to state 51
    OR    shift, and go to state 52
    PROD  shift, and go to state 58
    DIV   shift, and go to state 59

    $default  reduce using rule 27 (exp)


State 87

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   28    | exp MINUS exp .
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp

    AND   shift, and go to state 51
    OR    shift, and go to state 52
    PROD  shift, and go to state 58
    DIV   shift, and go to state 59

    $default  reduce using rule 28 (exp)


State 88

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   29    | exp PROD exp .
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp

    AND  shift, and go to state 51
    OR   shift, and go to state 52

    $default  reduce using rule 29 (exp)


State 89

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   30    | exp DIV exp .
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp

    AND  shift, and go to state 51
    OR   shift, and go to state 52

    $default  reduce using rule 30 (exp)


State 90

   21 assignment: Const DATA_TYPE IDENTIFIER EQUAL . exp

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 105
    term  go to state 29


State 91

   49 stat: IF '(' exp ')' . smtm
   50     | IF '(' exp ')' . smtm ELIF_S ELSE_
   51     | IF '(' exp ')' . smtm ELSE_
   52     | IF '(' exp ')' . smtm ELIF_S

    '{'  shift, and go to state 106

    smtm  go to state 107


State 92

   53 stat: WHILE '(' exp ')' . smtm

    '{'  shift, and go to state 106

    smtm  go to state 108


State 93

   54 stat: FOR '(' IDENTIFIER EQUAL . exp ';' exp ';' IDENTIFIER EQUAL exp ')' smtm

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 109
    term  go to state 29


State 94

   11 line: DEFINE_TYPE '{' ELEMENTS '}' . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 110


State 95

   12 ELEMENTS: DATA_TYPE IDENTIFIER . ';' ELEMENTS

    ';'  shift, and go to state 111


State 96

   10 line: EVAL '(' exp ')' . ';'

    ';'  shift, and go to state 112


State 97

   24 assignment: IDENTIFIER '[' exp ']' . EQUAL exp

    EQUAL  shift, and go to state 113


State 98

   67 FUNCTION: DATA_TYPE FUN IDENTIFIER '(' . lista_param ')' smtm_fun

    Integer    shift, and go to state 2
    Float      shift, and go to state 3
    Character  shift, and go to state 4
    Bool       shift, and go to state 5
    String     shift, and go to state 6

    $default  reduce using rule 69 (lista_param)

    DATA_TYPE    go to state 114
    lista_param  go to state 115
    more_params  go to state 116
    paramentru   go to state 117


State 99

   20 assignment: DATA_TYPE IDENTIFIER EQUAL exp .
   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp

    GEQ    shift, and go to state 49
    LEQ    shift, and go to state 50
    AND    shift, and go to state 51
    OR     shift, and go to state 52
    EQEQ   shift, and go to state 53
    LS     shift, and go to state 54
    GE     shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59

    $default  reduce using rule 20 (assignment)


State 100

   22 assignment: DATA_TYPE IDENTIFIER '[' exp . ']'
   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp

    GEQ    shift, and go to state 49
    LEQ    shift, and go to state 50
    AND    shift, and go to state 51
    OR     shift, and go to state 52
    EQEQ   shift, and go to state 53
    LS     shift, and go to state 54
    GE     shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59
    ']'    shift, and go to state 118


State 101

    7 line: print String_Value ',' exp ';' .

    $default  reduce using rule 7 (line)


State 102

   40 term: IDENTIFIER '(' fun_call_list ')' .

    $default  reduce using rule 40 (term)


State 103

   48 more_call_param: more_call_param ',' . exp

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 119
    term  go to state 29


State 104

   39 term: IDENTIFIER '[' exp ']' .

    $default  reduce using rule 39 (term)


State 105

   21 assignment: Const DATA_TYPE IDENTIFIER EQUAL exp .
   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp

    GEQ    shift, and go to state 49
    LEQ    shift, and go to state 50
    AND    shift, and go to state 51
    OR     shift, and go to state 52
    EQEQ   shift, and go to state 53
    LS     shift, and go to state 54
    GE     shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59

    $default  reduce using rule 21 (assignment)


State 106

   59 smtm: '{' . smtm_types '}'
   60     | '{' . '}'

    print            shift, and go to state 120
    Integer          shift, and go to state 2
    Float            shift, and go to state 3
    Character        shift, and go to state 4
    Bool             shift, and go to state 5
    String           shift, and go to state 6
    Const            shift, and go to state 7
    IF               shift, and go to state 8
    WHILE            shift, and go to state 9
    FOR              shift, and go to state 10
    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 121
    '('              shift, and go to state 27
    '}'              shift, and go to state 122

    DATA_TYPE   go to state 123
    assignment  go to state 124
    exp         go to state 125
    term        go to state 29
    stat        go to state 126
    smtm_types  go to state 127
    smtm_type   go to state 128


State 107

   49 stat: IF '(' exp ')' smtm .
   50     | IF '(' exp ')' smtm . ELIF_S ELSE_
   51     | IF '(' exp ')' smtm . ELSE_
   52     | IF '(' exp ')' smtm . ELIF_S

    ELSE  shift, and go to state 129
    ELIF  shift, and go to state 130

    $default  reduce using rule 49 (stat)

    ELSE_   go to state 131
    ELIF_S  go to state 132
    ELIF_   go to state 133


State 108

   53 stat: WHILE '(' exp ')' smtm .

    $default  reduce using rule 53 (stat)


State 109

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp
   54 stat: FOR '(' IDENTIFIER EQUAL exp . ';' exp ';' IDENTIFIER EQUAL exp ')' smtm

    GEQ    shift, and go to state 49
    LEQ    shift, and go to state 50
    AND    shift, and go to state 51
    OR     shift, and go to state 52
    EQEQ   shift, and go to state 53
    LS     shift, and go to state 54
    GE     shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59
    ';'    shift, and go to state 134


State 110

   11 line: DEFINE_TYPE '{' ELEMENTS '}' IDENTIFIER . ';'

    ';'  shift, and go to state 135


State 111

   12 ELEMENTS: DATA_TYPE IDENTIFIER ';' . ELEMENTS

    Integer    shift, and go to state 2
    Float      shift, and go to state 3
    Character  shift, and go to state 4
    Bool       shift, and go to state 5
    String     shift, and go to state 6

    $default  reduce using rule 13 (ELEMENTS)

    ELEMENTS   go to state 136
    DATA_TYPE  go to state 66


State 112

   10 line: EVAL '(' exp ')' ';' .

    $default  reduce using rule 10 (line)


State 113

   24 assignment: IDENTIFIER '[' exp ']' EQUAL . exp

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 137
    term  go to state 29


State 114

   72 paramentru: DATA_TYPE . IDENTIFIER

    IDENTIFIER  shift, and go to state 138


State 115

   67 FUNCTION: DATA_TYPE FUN IDENTIFIER '(' lista_param . ')' smtm_fun

    ')'  shift, and go to state 139


State 116

   68 lista_param: more_params .
   71 more_params: more_params . ',' paramentru

    ','  shift, and go to state 140

    $default  reduce using rule 68 (lista_param)


State 117

   70 more_params: paramentru .

    $default  reduce using rule 70 (more_params)


State 118

   22 assignment: DATA_TYPE IDENTIFIER '[' exp ']' .

    $default  reduce using rule 22 (assignment)


State 119

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp
   48 more_call_param: more_call_param ',' exp .

    GEQ    shift, and go to state 49
    LEQ    shift, and go to state 50
    AND    shift, and go to state 51
    OR     shift, and go to state 52
    EQEQ   shift, and go to state 53
    LS     shift, and go to state 54
    GE     shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59

    $default  reduce using rule 48 (more_call_param)


State 120

   65 smtm_type: print . exp ';'

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 141
    term  go to state 29


State 121

   23 assignment: IDENTIFIER . EQUAL exp
   24           | IDENTIFIER . '[' exp ']' EQUAL exp
   38 term: IDENTIFIER .
   39     | IDENTIFIER . '[' exp ']'
   40     | IDENTIFIER . '(' fun_call_list ')'

    EQUAL  shift, and go to state 37
    '('    shift, and go to state 45
    '['    shift, and go to state 142

    $default  reduce using rule 38 (term)


State 122

   60 smtm: '{' '}' .

    $default  reduce using rule 60 (smtm)


State 123

   19 assignment: DATA_TYPE . IDENTIFIER
   20           | DATA_TYPE . IDENTIFIER EQUAL exp
   22           | DATA_TYPE . IDENTIFIER '[' exp ']'

    IDENTIFIER  shift, and go to state 42


State 124

   63 smtm_type: assignment . ';'

    ';'  shift, and go to state 143


State 125

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp
   64 smtm_type: exp . ';'

    GEQ    shift, and go to state 49
    LEQ    shift, and go to state 50
    AND    shift, and go to state 51
    OR     shift, and go to state 52
    EQEQ   shift, and go to state 53
    LS     shift, and go to state 54
    GE     shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59
    ';'    shift, and go to state 144


State 126

   66 smtm_type: stat .

    $default  reduce using rule 66 (smtm_type)


State 127

   59 smtm: '{' smtm_types . '}'
   62 smtm_types: smtm_types . smtm_type

    print            shift, and go to state 120
    Integer          shift, and go to state 2
    Float            shift, and go to state 3
    Character        shift, and go to state 4
    Bool             shift, and go to state 5
    String           shift, and go to state 6
    Const            shift, and go to state 7
    IF               shift, and go to state 8
    WHILE            shift, and go to state 9
    FOR              shift, and go to state 10
    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 121
    '('              shift, and go to state 27
    '}'              shift, and go to state 145

    DATA_TYPE   go to state 123
    assignment  go to state 124
    exp         go to state 125
    term        go to state 29
    stat        go to state 126
    smtm_type   go to state 146


State 128

   61 smtm_types: smtm_type .

    $default  reduce using rule 61 (smtm_types)


State 129

   55 ELSE_: ELSE . smtm

    '{'  shift, and go to state 106

    smtm  go to state 147


State 130

   58 ELIF_: ELIF . '(' exp ')' smtm

    '('  shift, and go to state 148


State 131

   51 stat: IF '(' exp ')' smtm ELSE_ .

    $default  reduce using rule 51 (stat)


State 132

   50 stat: IF '(' exp ')' smtm ELIF_S . ELSE_
   52     | IF '(' exp ')' smtm ELIF_S .
   57 ELIF_S: ELIF_S . ELIF_

    ELSE  shift, and go to state 129
    ELIF  shift, and go to state 130

    $default  reduce using rule 52 (stat)

    ELSE_  go to state 149
    ELIF_  go to state 150


State 133

   56 ELIF_S: ELIF_ .

    $default  reduce using rule 56 (ELIF_S)


State 134

   54 stat: FOR '(' IDENTIFIER EQUAL exp ';' . exp ';' IDENTIFIER EQUAL exp ')' smtm

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 151
    term  go to state 29


State 135

   11 line: DEFINE_TYPE '{' ELEMENTS '}' IDENTIFIER ';' .

    $default  reduce using rule 11 (line)


State 136

   12 ELEMENTS: DATA_TYPE IDENTIFIER ';' ELEMENTS .

    $default  reduce using rule 12 (ELEMENTS)


State 137

   24 assignment: IDENTIFIER '[' exp ']' EQUAL exp .
   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp

    GEQ    shift, and go to state 49
    LEQ    shift, and go to state 50
    AND    shift, and go to state 51
    OR     shift, and go to state 52
    EQEQ   shift, and go to state 53
    LS     shift, and go to state 54
    GE     shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59

    $default  reduce using rule 24 (assignment)


State 138

   72 paramentru: DATA_TYPE IDENTIFIER .

    $default  reduce using rule 72 (paramentru)


State 139

   67 FUNCTION: DATA_TYPE FUN IDENTIFIER '(' lista_param ')' . smtm_fun

    '{'  shift, and go to state 152

    smtm_fun  go to state 153


State 140

   71 more_params: more_params ',' . paramentru

    Integer    shift, and go to state 2
    Float      shift, and go to state 3
    Character  shift, and go to state 4
    Bool       shift, and go to state 5
    String     shift, and go to state 6

    DATA_TYPE   go to state 114
    paramentru  go to state 154


State 141

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp
   65 smtm_type: print exp . ';'

    GEQ    shift, and go to state 49
    LEQ    shift, and go to state 50
    AND    shift, and go to state 51
    OR     shift, and go to state 52
    EQEQ   shift, and go to state 53
    LS     shift, and go to state 54
    GE     shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59
    ';'    shift, and go to state 155


State 142

   24 assignment: IDENTIFIER '[' . exp ']' EQUAL exp
   39 term: IDENTIFIER '[' . exp ']'

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 156
    term  go to state 29


State 143

   63 smtm_type: assignment ';' .

    $default  reduce using rule 63 (smtm_type)


State 144

   64 smtm_type: exp ';' .

    $default  reduce using rule 64 (smtm_type)


State 145

   59 smtm: '{' smtm_types '}' .

    $default  reduce using rule 59 (smtm)


State 146

   62 smtm_types: smtm_types smtm_type .

    $default  reduce using rule 62 (smtm_types)


State 147

   55 ELSE_: ELSE smtm .

    $default  reduce using rule 55 (ELSE_)


State 148

   58 ELIF_: ELIF '(' . exp ')' smtm

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 157
    term  go to state 29


State 149

   50 stat: IF '(' exp ')' smtm ELIF_S ELSE_ .

    $default  reduce using rule 50 (stat)


State 150

   57 ELIF_S: ELIF_S ELIF_ .

    $default  reduce using rule 57 (ELIF_S)


State 151

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp
   54 stat: FOR '(' IDENTIFIER EQUAL exp ';' exp . ';' IDENTIFIER EQUAL exp ')' smtm

    GEQ    shift, and go to state 49
    LEQ    shift, and go to state 50
    AND    shift, and go to state 51
    OR     shift, and go to state 52
    EQEQ   shift, and go to state 53
    LS     shift, and go to state 54
    GE     shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59
    ';'    shift, and go to state 158


State 152

   73 smtm_fun: '{' . smtm_types RETURN exp ';' '}'
   74         | '{' . RETURN exp ';' '}'

    print            shift, and go to state 120
    Integer          shift, and go to state 2
    Float            shift, and go to state 3
    Character        shift, and go to state 4
    Bool             shift, and go to state 5
    String           shift, and go to state 6
    Const            shift, and go to state 7
    IF               shift, and go to state 8
    WHILE            shift, and go to state 9
    FOR              shift, and go to state 10
    RETURN           shift, and go to state 159
    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 121
    '('              shift, and go to state 27

    DATA_TYPE   go to state 123
    assignment  go to state 124
    exp         go to state 125
    term        go to state 29
    stat        go to state 126
    smtm_types  go to state 160
    smtm_type   go to state 128


State 153

   67 FUNCTION: DATA_TYPE FUN IDENTIFIER '(' lista_param ')' smtm_fun .

    $default  reduce using rule 67 (FUNCTION)


State 154

   71 more_params: more_params ',' paramentru .

    $default  reduce using rule 71 (more_params)


State 155

   65 smtm_type: print exp ';' .

    $default  reduce using rule 65 (smtm_type)


State 156

   24 assignment: IDENTIFIER '[' exp . ']' EQUAL exp
   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp
   39 term: IDENTIFIER '[' exp . ']'

    GEQ    shift, and go to state 49
    LEQ    shift, and go to state 50
    AND    shift, and go to state 51
    OR     shift, and go to state 52
    EQEQ   shift, and go to state 53
    LS     shift, and go to state 54
    GE     shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59
    ']'    shift, and go to state 161


State 157

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp
   58 ELIF_: ELIF '(' exp . ')' smtm

    GEQ    shift, and go to state 49
    LEQ    shift, and go to state 50
    AND    shift, and go to state 51
    OR     shift, and go to state 52
    EQEQ   shift, and go to state 53
    LS     shift, and go to state 54
    GE     shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59
    ')'    shift, and go to state 162


State 158

   54 stat: FOR '(' IDENTIFIER EQUAL exp ';' exp ';' . IDENTIFIER EQUAL exp ')' smtm

    IDENTIFIER  shift, and go to state 163


State 159

   74 smtm_fun: '{' RETURN . exp ';' '}'

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 164
    term  go to state 29


State 160

   62 smtm_types: smtm_types . smtm_type
   73 smtm_fun: '{' smtm_types . RETURN exp ';' '}'

    print            shift, and go to state 120
    Integer          shift, and go to state 2
    Float            shift, and go to state 3
    Character        shift, and go to state 4
    Bool             shift, and go to state 5
    String           shift, and go to state 6
    Const            shift, and go to state 7
    IF               shift, and go to state 8
    WHILE            shift, and go to state 9
    FOR              shift, and go to state 10
    RETURN           shift, and go to state 165
    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 121
    '('              shift, and go to state 27

    DATA_TYPE   go to state 123
    assignment  go to state 124
    exp         go to state 125
    term        go to state 29
    stat        go to state 126
    smtm_type   go to state 146


State 161

   24 assignment: IDENTIFIER '[' exp ']' . EQUAL exp
   39 term: IDENTIFIER '[' exp ']' .

    EQUAL  shift, and go to state 113

    $default  reduce using rule 39 (term)


State 162

   58 ELIF_: ELIF '(' exp ')' . smtm

    '{'  shift, and go to state 106

    smtm  go to state 166


State 163

   54 stat: FOR '(' IDENTIFIER EQUAL exp ';' exp ';' IDENTIFIER . EQUAL exp ')' smtm

    EQUAL  shift, and go to state 167


State 164

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp
   74 smtm_fun: '{' RETURN exp . ';' '}'

    GEQ    shift, and go to state 49
    LEQ    shift, and go to state 50
    AND    shift, and go to state 51
    OR     shift, and go to state 52
    EQEQ   shift, and go to state 53
    LS     shift, and go to state 54
    GE     shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59
    ';'    shift, and go to state 168


State 165

   73 smtm_fun: '{' smtm_types RETURN . exp ';' '}'

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 169
    term  go to state 29


State 166

   58 ELIF_: ELIF '(' exp ')' smtm .

    $default  reduce using rule 58 (ELIF_)


State 167

   54 stat: FOR '(' IDENTIFIER EQUAL exp ';' exp ';' IDENTIFIER EQUAL . exp ')' smtm

    String_Value     shift, and go to state 47
    Character_Value  shift, and go to state 23
    number           shift, and go to state 24
    number_r         shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    '('              shift, and go to state 27

    exp   go to state 170
    term  go to state 29


State 168

   74 smtm_fun: '{' RETURN exp ';' . '}'

    '}'  shift, and go to state 171


State 169

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp
   73 smtm_fun: '{' smtm_types RETURN exp . ';' '}'

    GEQ    shift, and go to state 49
    LEQ    shift, and go to state 50
    AND    shift, and go to state 51
    OR     shift, and go to state 52
    EQEQ   shift, and go to state 53
    LS     shift, and go to state 54
    GE     shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59
    ';'    shift, and go to state 172


State 170

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . PROD exp
   30    | exp . DIV exp
   31    | exp . AND exp
   32    | exp . OR exp
   33    | exp . LS exp
   34    | exp . GE exp
   35    | exp . LEQ exp
   36    | exp . GEQ exp
   37    | exp . EQEQ exp
   54 stat: FOR '(' IDENTIFIER EQUAL exp ';' exp ';' IDENTIFIER EQUAL exp . ')' smtm

    GEQ    shift, and go to state 49
    LEQ    shift, and go to state 50
    AND    shift, and go to state 51
    OR     shift, and go to state 52
    EQEQ   shift, and go to state 53
    LS     shift, and go to state 54
    GE     shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    PROD   shift, and go to state 58
    DIV    shift, and go to state 59
    ')'    shift, and go to state 173


State 171

   74 smtm_fun: '{' RETURN exp ';' '}' .

    $default  reduce using rule 74 (smtm_fun)


State 172

   73 smtm_fun: '{' smtm_types RETURN exp ';' . '}'

    '}'  shift, and go to state 174


State 173

   54 stat: FOR '(' IDENTIFIER EQUAL exp ';' exp ';' IDENTIFIER EQUAL exp ')' . smtm

    '{'  shift, and go to state 106

    smtm  go to state 175


State 174

   73 smtm_fun: '{' smtm_types RETURN exp ';' '}' .

    $default  reduce using rule 73 (smtm_fun)


State 175

   54 stat: FOR '(' IDENTIFIER EQUAL exp ';' exp ';' IDENTIFIER EQUAL exp ')' smtm .

    $default  reduce using rule 54 (stat)
